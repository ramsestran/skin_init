//**********************************************
//this file do : initial some mixins
//**********************************************




/******************************
  -  helper mixin  -
*******************************/

//block 
@mixin block {
  &:not(:last-child) {
    margin-bottom: 1.5rem;
  }
}


//clear fix
@mixin clearfix {
  &:after {
    clear: both;
    content: " ";
    display: table;
  }
}

//Unselectable
@mixin unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}


//Place-holder setting
@mixin placeholder {
  $placeholders: ":-moz" ":-webkit-input" "-moz" "-ms-input";
  @each $placeholder in $placeholders {
    &:#{$placeholder}-placeholder {
      @content;
    }
  }
}

//Overflow-touch
@mixin overflow-touch {
  -webkit-overflow-scrolling: touch;
}

/******************************
  -  control  -
*******************************/

$control-radius: $radius !default;
$control-radius-small: $radius-small !default;

$control-padding-vertical: calc(0.375em - 1px) !default;
$control-padding-horizontal: calc(0.625em - 1px) !default;

@mixin control {
  -moz-appearance: none;
  -webkit-appearance: none;
  align-items: center;
  border: 1px solid transparent;
  border-radius: $control-radius;
  box-shadow: none;
  display: inline-flex;
  font-size: $size-normal;
  height: 2.25em;
  justify-content: flex-start;
  line-height: 1.5;
  position: relative;
  vertical-align: top;
  
  // States
  &:focus,
  &.is-focused,
  &:active,
  &.is-active {
    outline: none;
  }
  &[disabled] {
    cursor: not-allowed;
  }
}

// The controls sizes use mixins so they can be used at different breakpoints
@mixin control-small {
  border-radius: $control-radius-small;
  font-size: $size-small;
}

@mixin control-medium {
  font-size: $size-medium;
}

@mixin control-large {
  font-size: $size-large;
}


/******************************
  -  position mixin  -
*******************************/

//Center
@mixin center($width, $height: 0) {
  position: absolute;
  @if $height != 0 {
    left: calc(50% - (#{$width} / 2));
    top: calc(50% - (#{$height} / 2));
  }
  @else {
    left: calc(50% - (#{$width} / 2));
    top: calc(50% - (#{$width} / 2));
  }
}

//Overlay
@mixin overlay($offset: 0) {
  bottom: $offset;
  left: $offset;
  position: absolute;
  right: $offset;
  top: $offset;
  z-index: 1;
}


/******************************
  -  responsive mixin  -
*******************************/

// Screen-fix

@mixin from($device) {
  @media screen and (min-width: $device) {
    @content;
  }
}

@mixin until($device) {
  @media screen and (max-width: $device - 1px) {
    @content;
  }
}



@mixin mobile {
  @media screen and (max-width: $tablet - 1px) {
    @content;
  }
}

@mixin tablet {
  @media screen and (min-width: $tablet), print {
    @content;
  }
}

@mixin tablet-only {
  @media screen and (min-width: $tablet) and (max-width: $desktop - 1px) {
    @content;
  }
}

@mixin touch {
  @media screen and (max-width: $desktop - 1px) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: $desktop) {
    @content;
  }
}

@mixin desktop-only {
  @media screen and (min-width: $desktop) and (max-width: $widescreen - 1px) {
    @content;
  }
}

@mixin widescreen {
  @media screen and (min-width: $widescreen) {
    @content;
  }
}

@mixin widescreen-only {
  @media screen and (min-width: $widescreen) and (max-width: $fullhd - 1px) {
    @content;
  }
}

@mixin fullhd {
  @media screen and (min-width: $fullhd) {
    @content;
  }
}
//End screen-fix

/******************************
 -  shape mixin  -
*******************************/

//arrow
@mixin arrow($color , $vector) {
  border: 1px solid $color;
  border-right: 0;
  border-top: 0;
  content: " ";
  display: block;
  height: 0.5em;
  pointer-events: none;
  position: absolute;
  transform: rotate($vector);
  width: 0.5em;
}

//Triple-line hamburger icon
@mixin hamburger($dimensions) {
  cursor: pointer;
  display: block;
  height: $dimensions;
  position: relative;
  width: $dimensions;
  span {
    background-color: $text;
    display: block;
    height: 2px;
    left: 50%;
    margin-left: -7px;
    position: absolute;
    top: 50%;
    transition: none $speed $easing;
    transition-property: background, left, opacity, transform;
    width: 18px;
    &:nth-child(1) {
      margin-top: -7px;
    }
    &:nth-child(2) {
      margin-top: -2px;
    }
    &:nth-child(3) {
      margin-top:3px;
    }
  }
  &:hover {
    background-color: $background;
  }

  // Modifers
  &.is-active {
    span {
      background-color: $text;
      &:nth-child(1) {
        margin-left: -5px;
        transform: rotate(45deg);
        transform-origin: left top;
      }
      &:nth-child(2) {
        opacity: 0;
      }
      &:nth-child(3) {
        margin-left: -5px;
        transform: rotate(-45deg);
        transform-origin: left bottom;
      }
    }
  }
}
//End triple-line hamburger icon

//Spin-around button
@mixin loader {
  animation: spinAround 500ms infinite linear;
  border: 2px solid $border;
  border-radius: 290486px;
  border-right-color: transparent;
  border-top-color: transparent;
  content: "";
  display: block;
  height: 1em;
  position: relative;
  width: 1em;
}

//Font-awesome block  
@mixin fa($size, $dimensions) {
  display: inline-block;
  font-size: $size;
  height: $dimensions;
  line-height: $dimensions;
  text-align: center;
  vertical-align: middle;
  width: $dimensions;
}

//Delete
@mixin delete {
  @include unselectable;
  -moz-appearance: none;
  -webkit-appearance: none;
  background-color: rgba($black, 0.2);
  border: none;
  border-radius: 290486px;
  cursor: pointer;
  display: inline-block;
  flex-grow: 0;
  flex-shrink: 0;
  font-size: $size-normal;
  height: 20px;
  max-height: 20px;
  max-width: 20px;
  min-height: 20px;
  min-width: 20px;
  outline: none;
  position: relative;
  vertical-align: top;
  width: 20px;
  &:before,
  &:after {
    background-color: $white;
    content: "";
    display: block;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translateX(-50%) translateY(-50%) rotate(45deg);
    transform-origin: center center;
  }
  &:before {
    height: 2px;
    width: 50%;
  }
  &:after {
    height: 50%;
    width: 2px;
  }
  &:hover,
  &:focus {
    background-color: rgba($black, 0.3);
  }
  &:active {
    background-color: rgba($black, 0.4);
  }
  // Sizes
  &.is-small {
    height: 16px;
    width: 16px;
  }
  &.is-medium {
    height: 24px;
    width: 24px;
  }
  &.is-large {
    height: 32px;
    width: 32px;
  }
} 

